version: '3'

services:
  django:
    image: tigertom/rest_api
    container_name: restapi_django
    volumes:
      - /srv/docker/restAPI:/app
      - /srv/docker/restAPI/static:/app/static
      - /srv/docker/restAPI/media:/app/media
      - /srv/docker/restAPI/.env:/app/.env:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    expose:
      - "8000"
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - main-network

  redis:
    image: redis:7-alpine
    container_name: restapi_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - main-network

  celery:
    image: tigertom/rest_api
    container_name: restapi_celery
    command: celery -A srv worker --loglevel=info
    volumes:
      - /srv/docker/restAPI:/app
      - /srv/docker/restAPI/.env:/app/.env:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - redis
      - django
    restart: unless-stopped
    networks:
      - main-network
    healthcheck:
      test: celery -A srv inspect ping -d celery@$$HOSTNAME
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  celery-beat:
    image: tigertom/rest_api
    container_name: restapi_celery_beat
    command: celery -A srv beat --loglevel=info
    volumes:
      - /srv/docker/restAPI:/app
      - /srv/docker/restAPI/.env:/app/.env:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - redis
      - django
    restart: unless-stopped
    networks:
      - main-network
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'celery -A srv beat' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  nginx:
    image: nginx:latest
    container_name: restapi_nginx
    ports:
      - "8080:80"
    volumes:
      - /srv/docker/restAPI/static:/srv/docker/restAPI/static
      - /srv/docker/restAPI/media:/srv/docker/restAPI/media
      - /srv/docker/restAPI/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - django
    restart: unless-stopped
    networks:
      - main-network
volumes:
  redis_data:

networks:
  main-network:
    external: true
    name: main-network
